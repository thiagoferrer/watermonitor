name: CI/CD with PostgreSQL and Docker

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  IMAGE_NAME: medicao-api
  POSTGRES_PORT: 5433

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: monitor_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password123
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432  # ✅ CORREÇÃO: Remove a variável env daqui

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and test with PostgreSQL
        run: mvn clean package
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5433/monitor_db  # ✅ CORREÇÃO: Porta direta
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: password123

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:$GITHUB_SHA .
          docker images

      - name: Run container integration test
        run: |
          # Teste de integração
          docker run -d --name test-container \
            -e SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5433/monitor_db \
            -e SPRING_DATASOURCE_USERNAME=postgres \
            -e SPRING_DATASOURCE_PASSWORD=password123 \
            -p 8080:8080 \
            $IMAGE_NAME:$GITHUB_SHA
          
          echo "Aguardando aplicação iniciar..."
          sleep 30
          
          # Teste de saúde da aplicação
          curl -f http://localhost:8080/actuator/health || \
          (echo "❌ Health check falhou" && docker logs test-container && exit 1)
          
          echo "✅ Teste de integração passou!"

      - name: Logs on failure
        if: failure()
        run: |
          docker logs test-container || echo "Container não encontrado"

      - name: Cleanup
        if: always()
        run: |
          docker stop test-container || true
          docker rm test-container || true