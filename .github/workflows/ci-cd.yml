name: CI/CD with PostgreSQL and Docker

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: monitor_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password123
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests
        env:
          SPRING_PROFILES_ACTIVE: dev
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/monitor_db

      - name: Build Docker image
        run: |
          docker build -t monitor-app:$GITHUB_SHA .
          docker images

      - name: Test with Docker Compose
        run: |
          # Usar docker-compose para testar
          docker-compose up -d postgres
          sleep 10
          
          # Testar aplicação
          docker run -d --name test-app \
            -e SPRING_PROFILES_ACTIVE=docker \
            -e SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/monitor_db \
            --network=host \
            monitor-app:$GITHUB_SHA
          
          echo "Aguardando aplicação..."
          sleep 30
          
          # Teste de saúde
          curl -f http://localhost:8081/actuator/health || docker logs test-app

      - name: Cleanup
        if: always()
        run: |
          docker stop test-app || true
          docker rm test-app || true
          docker-compose down