name: CI/CD with PostgreSQL and Docker

on:
  push:
    branches: [ main, develop ]

env:
  IMAGE_NAME: medicao-api

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: monitor_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password123
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build JAR package
        run: mvn clean package -DskipTests  # ✅ Primeiro construir

      - name: Run tests with PostgreSQL
        run: mvn test  # ✅ Depois testar
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/monitor_db
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: password123

      - name: Build Docker image
        run: |
          # ✅ Verificar se o JAR existe
          ls -la target/
          docker build -t $IMAGE_NAME:$GITHUB_SHA .

      - name: Run container integration test
        run: |
          # ✅ Usar porta DIFERENTE para evitar conflito
          docker run -d --name test-db \
            -e POSTGRES_DB=monitor_db \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=password123 \
            -p 5433:5432 \  # ✅ Porta diferente
            postgres:13
          
          sleep 20
          
          docker run -d \
            --name test-api \
            -e SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5433/monitor_db \
            -e SPRING_DATASOURCE_USERNAME=postgres \
            -e SPRING_DATASOURCE_PASSWORD=password123 \
            -p 8080:8080 \
            $IMAGE_NAME:$GITHUB_SHA
          
          sleep 30
          
          curl -f http://localhost:8080/api/medicoes || exit 1
          
          docker stop test-api test-db
          docker rm test-api test-db